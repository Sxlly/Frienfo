[{"C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\index.js":"1","C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\App.js":"2","C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\reportWebVitals.js":"3","C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\Home.js":"4","C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\options.js":"5"},{"size":660,"mtime":1612177578819,"results":"6","hashOfConfig":"7"},{"size":141,"mtime":1612161936755,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":6804,"mtime":1612177020604,"results":"10","hashOfConfig":"7"},{"size":2177,"mtime":1612176952507,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1962up3",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\index.js",[],"C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\App.js",[],["25","26"],"C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\reportWebVitals.js",[],["27","28"],"C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\Home.js",["29","30","31","32","33","34"],"import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, CssBaseline, IconButton, Toolbar } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//import of icons\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AccountCircleOutlinesIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\n//import of dev made js files\r\nimport { Options } from \"./options\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst icon_styles = {\r\n\r\n    button: {\r\n\r\n        width: 45,\r\n        height: 45,\r\n        color: \"#ffffff\",\r\n        padding: 1,\r\n    }\r\n}\r\n\r\nconst icon_styles_left = {\r\n\r\n    button: {\r\n        width: 45,\r\n        height: 45,\r\n        color: \"#37474f\",\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n\r\n        display: \"flex\",\r\n    },\r\n\r\n    toolbar: {\r\n\r\n        paddingRight: 45,\r\n        color: \"rgba(13, 16, 36, 1)\",\r\n\r\n    },\r\n\r\n    toolbarIcon: {\r\n\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: \"0 8px\",\r\n        width: 40,\r\n        height: 40,\r\n        ...theme.mixins.toolbar,\r\n    },\r\n\r\n    appBar: {\r\n\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n\r\n    appBarShift: {\r\n\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    menuButton: {\r\n\r\n        marginRight: 36,\r\n        width: 40,\r\n        height: 40,\r\n    },\r\n\r\n    menuButtonHidden: {\r\n\r\n        display: \"none\",\r\n    },\r\n\r\n    title: {\r\n\r\n        flexGrow: 1,\r\n        width: 45,\r\n        height: 45,\r\n    },\r\n\r\n    logo: {\r\n\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        maxWidth: \"215px\",\r\n        padding: 2,\r\n        backgroundColor: \"white\",\r\n        backgroundImage: \"linear-gradient(to bottom, white 0%, white 50%, blue 100%)\",\r\n        WebkitBackgroundClip: \"text\",\r\n        MozBackgroundClip: \"text\",\r\n        WebkitTextFillColor: \"transparent\",\r\n        MozTextFillColor: \"transparent\",\r\n    },\r\n\r\n    drawerPaper: {\r\n\r\n        position: \"relative\",\r\n        whiteSpace: \"nowrap\",\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    drawerPaperClose: {\r\n\r\n        overflowX: \"hidden\", \r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n\r\n    },\r\n\r\n    container: {\r\n\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n\r\n    footerContainer: {\r\n\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        display: \"flex\",\r\n    },\r\n\r\n    paper: {\r\n\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n\r\n    fixedHeight: {\r\n\r\n        height: 280,\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nfunction Home() {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)} style = {{ backgroundColor: \"rgba(13, 16, 36, 1)\", color: \"White\"}}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <ListIcon style={icon_styles.button} />\r\n                    </IconButton>\r\n                    <h1 className={classes.logo}>FRIENFO</h1>\r\n                    <AccountCircleOutlinesIcon style={icon_styles.button}>\r\n                        <Badge badgeContent={5} />\r\n                    </AccountCircleOutlinesIcon>\r\n                    <ExitToAppIcon style={icon_styles.button}>\r\n                        <Badge badgeContent={6} />\r\n                    </ExitToAppIcon>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes = {{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n\r\n                }}\r\n\r\n                open = {open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton edge=\"start\" aria-label=\"menuleft\" className={classes.margin} onClick = {handleDrawerClose} >\r\n                        <ChevronLeftIcon fontSize = \"large\" />\r\n                    </IconButton>\r\n                \r\n\r\n                </div>\r\n                <List style={{ backgroundColor: \"#ffffff\"}}>\r\n                    {Options}\r\n                </List>\r\n            </Drawer>\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Home;","C:\\Users\\Shar\\Desktop\\Beginner Website\\frienfo\\src\\options.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"35","replacedBy":"39"},{"ruleId":"37","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":11,"column":8,"nodeType":"43","messageId":"44","endLine":11,"endColumn":18},{"ruleId":"41","severity":1,"message":"46","line":35,"column":7,"nodeType":"43","messageId":"44","endLine":35,"endColumn":23},{"ruleId":"41","severity":1,"message":"47","line":197,"column":11,"nodeType":"43","messageId":"44","endLine":197,"endColumn":27},{"ruleId":"41","severity":1,"message":"48","line":199,"column":12,"nodeType":"43","messageId":"44","endLine":199,"endColumn":17},{"ruleId":"41","severity":1,"message":"49","line":199,"column":19,"nodeType":"43","messageId":"44","endLine":199,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],["50"],["51"],"no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'icon_styles_left' is assigned a value but never used.","'fixedHeightPaper' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]